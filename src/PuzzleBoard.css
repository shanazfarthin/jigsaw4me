.PuzzleBoard {
  position: relative;
  top: -30px; /* Adjust for positioning */
  display: grid;
  grid-template-columns: repeat(4, 1fr); /* 4 columns */
  grid-template-rows: repeat(4, 1fr); /* 4 rows */
  gap: 2px;
  width: 400px;
  height: 400px;
  margin: 0 auto;
  border: 2px solid #ccc;
  background-color: #F4E885;
  touch-action: manipulation; /* Ensures smooth touch interactions */
  user-select: none; /* Prevents accidental text selection on touch devices */
  position: relative;
  width: 100%;
  height: 500px; /* Adjust the board size */
  border: 2px solid #000;
  background-color: lightgray;
}

.PuzzlePiece img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  cursor: pointer;
}

input[type="file"] {
  margin: 50px;
  font-family: 'Comic Sans MS', cursive, sans-serif;
  color: #024b02;
  font-size: 1rem;
}

button {
  margin-top: 20px;
  padding: 10px 20px;
  background-color: #ff2a00;
  color: white;
  border: none;
  cursor: pointer;
  border-radius: 5px; /* Slightly rounded corners */
  transition: background-color 0.3s ease; /* Smooth hover effect */
}

button:hover:not(:disabled) {
  background-color: #e62300; /* Darker red on hover */
}

button:disabled {
  background-color: #ccc;
  cursor: not-allowed;
}

.PuzzleContainer {
  display: flex;
  justify-content: flex-start;  /* Align items to the left */
  align-items: flex-start;      /* Align items to the top */
  min-height: calc(100vh - 50px); /* Ensure it takes full height minus 50px */
  width: 100%;
  margin: 0;  /* Remove any automatic margin */
  padding-bottom: 40px;
  margin-top: -10px;
  margin-left: 70px;  /* Add a small left margin if you want further left alignment */
  flex-wrap: wrap;  /* Allows wrapping for smaller screens */
}

.Stopwatch {
  font-size: 2rem;
  margin-top: 20px;
  color: #333;
  text-align: center;
  font-weight: bold;
}

.center {
  width: 25%;
  text-align: center;
}

.PuzzleGrid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 3px;
}

.PuzzlePiece {
  width: 100px;
  height: 100px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  cursor: pointer;
  transition: transform 0.2s ease; /* Smooth scaling effect */
    background-color: #3498db;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: move;
    user-select: none;
  }

.PuzzlePiece:hover {
  transform: scale(1.05); /* Slight zoom-in on hover */
}

.PuzzlePiece img {
  width: 100%;
  height: 100%;
}

.RightSide {
  width: 25%;
  text-align: center;
}

.RightSide img {
  max-width: 80%;
  height: auto;
  margin: 10px auto;
  border: 2px solid #97bacf;
  border-radius: 8px;
  margin-right: 150px;  /* Keeps some space on the right */
  display: block;  /* Ensures the image is treated as a block element for centering */
  margin-left: auto;  /* This will center the image towards the right side */
}

.Timer p {
  font-size: 20px;
  font-weight: bold;
}

.animatedMessage {
  font-size: 35px;
  color: #330564;
  font-weight: bold;
  animation: pulse 1.5s infinite;
  margin: 30px; /* Adds space around the element */
  padding: 10px; /* Optional: Adds space inside the element */
}

@keyframes pulse {
  0% {
    opacity: 0.5;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
  }
  100% {
    opacity: 0.5;
    transform: scale(1);
  }
}

@media only screen and (max-width: 768px) {
  .PuzzleBoard {
    width: 100%;
    height: auto;
    grid-template-columns: repeat(2, 1fr); /* Adjust for smaller screens */
    gap: 5px;
  }

  .PuzzlePiece {
    width: 80px;
    height: 80px;
  }
}

@media only screen and (min-width: 1024px) {
  .PuzzleBoard {
    width: 500px;
    height: 500px;
  }

  .PuzzlePiece {
    width: 120px;
    height: 120px;
  }
}
